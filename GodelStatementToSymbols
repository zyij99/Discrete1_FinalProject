
import java.util.*;

public class GodelStatementToSymbols{
	
	public static void main(String[] args) {
		
		int godelSequence[], listOfPrimes[];
		
		Scanner console = new Scanner(System.in);
		
		try {
			System.out.println("Please enter the length of the list of primes: ");
			int listLength = console.nextInt();
			
			System.out.println("\nEnter prime integers (These are the prime numbers that are being raised by the godel statements)");
			listOfPrimes = createList(listLength);
			if(!acceptablePrimes(listOfPrimes, listLength)) {
				System.out.println("Unacceptable list of primes");
			}
			else {
				System.out.println("\nPlease enter Godel Sequence Numbers (Odd numbers from 1-23): ");
				godelSequence = createList(listLength);
				if(godelStatementAcceptable(godelSequence)) {
					System.out.println("\nSymbols According to Godel's Statement: " + statementToSymbols(godelSequence));
				}else {
					System.out.println("Unacceptable godel statement.");
				}
			}
		} 
		
		catch(InputMismatchException exception) {
			System.out.println("Input is not an integer");
		}
	
	}
	
	public static boolean acceptablePrimes(int[] A, int arrayLength) {
		
		int[] primeMatrix = new int [arrayLength];
		
		int arrayIndex = 0, num = 2;
		while(arrayIndex < arrayLength) {
			if(isPrime(num)) {
				primeMatrix[arrayIndex] = num;
				arrayIndex++;
			}
			num++;
		}
		
		for(int i = 0; i < A.length; i++) {
			if(!isPrime(A[i]) || (A[i] != primeMatrix[i])) {
				return false;
			}
		}
		return true;
	}
	
	public static int[] createList(int arrayLength) {
		Scanner console = new Scanner(System.in);

		int arrayList[] = new int[arrayLength];
		
		for(int i = 0; i < arrayList.length ;i++) {
			System.out.println("Please enter an integer");
			int arrayInt = console.nextInt();
			arrayList[i] = arrayInt;
		}
		
		return arrayList;
	}
	
	public static boolean godelStatementAcceptable(int A[]) {
		for(int i = 0; i < A.length; i++) {
			if (godelNumbering(A[i]) == null){
				return false;
			}
		}
		return true;
	}
	
	public static boolean isPrime(int numInput) {
    	for(int i = 0; i < numInput; i++) {
    		for(int j = 0; j < numInput; j++) {
    			if((i*j) == numInput && i != 1 && j != 1) {
    				return false;
    			}
    		}
    	}
    	return true;
    }
	
	public static String statementToSymbols(int godelStatement[]) {
		String symbolsOfPrimes = "";	
		for(int i = 0; i < godelStatement.length; i++) {
			if(boolGodelNumbering(godelStatement[i])) {
				symbolsOfPrimes += godelNumbering(godelStatement[i]);
			}
			else {
				return "Unacceptable List of Primes";
			}
		}
		return symbolsOfPrimes;
	}

	public static boolean boolGodelNumbering(int i) {
		if(i <= 23) {
			if(i%2 != 0) {
				return true;
			}
		}
		return false;
	}
	
	public static String godelNumbering(int i) {
		if(i == 1) {
			return "0";
		}
		else if(i == 3) {
			return "f";
		}
		else if(i == 5) {
			return "¬";
		}
		else if(i == 7) {
			return "∨";
		}
		else if(i == 9) {
			return "∀";
		}
		else if(i == 11) {
			return "(";
		}
		else if(i == 13) {
			return ")";
		}
		else if(i == 15) {
			return "∧";
		}
		else if(i == 17) {
			return "∃";
		}
		else if(i == 19) {
			return "=";
		}
		else if(i == 21) {
			return "x";
		}
		else if(i == 23) {
			return "y";
		}
		return null;
	}
}
